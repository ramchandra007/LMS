# Generated by Django 4.2.5 on 2024-01-04 12:27

import ckeditor.fields
import datetime
from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('user_type', models.CharField(choices=[(1, 'HOD'), (2, 'Staff'), (3, 'Student')], default=1, max_length=10)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='ad_salary',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('empname', models.CharField(max_length=100)),
                ('amount', models.CharField(max_length=100)),
                ('emi', models.CharField(max_length=100)),
                ('reason', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='adminemploy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('photo', models.ImageField(upload_to='images/')),
                ('firstname', models.CharField(max_length=100)),
                ('lastname', models.CharField(max_length=100)),
                ('empid', models.CharField(max_length=100)),
                ('email', models.CharField(max_length=100)),
                ('dateofjoining', models.DateField()),
                ('role', models.CharField(max_length=100)),
                ('gender', models.CharField(max_length=100)),
                ('location', models.CharField(max_length=100)),
                ('package', models.IntegerField()),
                ('address', models.CharField(max_length=500)),
                ('street', models.CharField(max_length=500)),
                ('state', models.CharField(max_length=500)),
                ('pins', models.CharField(max_length=100)),
                ('contactno', models.BigIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='adminnav',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('icon', models.CharField(max_length=100)),
                ('url', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Name', models.CharField(max_length=100)),
                ('Address', models.CharField(max_length=200)),
                ('PAN', models.CharField(max_length=100)),
                ('TAN', models.CharField(max_length=100)),
                ('GSTIN', models.CharField(max_length=100)),
                ('KYCSTATUS', models.CharField(max_length=100)),
                ('PFSTATUS', models.CharField(max_length=100)),
                ('ESICSTATUS', models.CharField(max_length=100)),
                ('PTSTATUS', models.CharField(max_length=100)),
                ('LWFSTATUS', models.CharField(max_length=100)),
                ('INCOMETAXPORTAL', models.CharField(max_length=200)),
                ('TRACES', models.CharField(max_length=100)),
                ('PF', models.CharField(max_length=100)),
                ('ESIC', models.CharField(max_length=100)),
                ('PT', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='depart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('department', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='emp',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('empname', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Employees',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('designation', models.CharField(max_length=100)),
                ('joining_date', models.DateField()),
                ('salary', models.DecimalField(decimal_places=2, max_digits=10)),
            ],
        ),
        migrations.CreateModel(
            name='employnav',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('icon', models.CharField(max_length=100)),
                ('url', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='ESIC',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('esi_status', models.CharField(max_length=100)),
                ('esi_payment', models.CharField(max_length=100)),
                ('username2', models.CharField(max_length=100)),
                ('password3', models.CharField(max_length=100)),
                ('esi_settings', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='info',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Paid', models.IntegerField()),
                ('Finalized', models.IntegerField()),
                ('skipped', models.IntegerField()),
                ('Total', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='loca',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('location', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='location',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('location_name', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='otp',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.IntegerField()),
                ('paymenttype', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='P_tax',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('professional_tax', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='PF',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pf_status', models.CharField(max_length=100)),
                ('pf_payment', models.CharField(max_length=100)),
                ('username1', models.CharField(max_length=100)),
                ('password2', models.CharField(max_length=100)),
                ('pf_setup', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='role',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('role_name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='TDS',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tds_payment', models.CharField(max_length=100)),
                ('tds_filling_setup', models.CharField(max_length=10)),
                ('filling_form', models.CharField(max_length=100)),
                ('userid', models.CharField(max_length=100)),
                ('password', models.CharField(max_length=100)),
                ('username', models.CharField(max_length=100)),
                ('password1', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='ts',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('TDSrecover', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='typeofd',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('certificates', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'typeofd',
            },
        ),
        migrations.CreateModel(
            name='types',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Students',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('gender', models.CharField(max_length=255)),
                ('profile_pic', models.FileField(upload_to='')),
                ('address', models.TextField()),
                ('dateofjoining', models.CharField(default='', max_length=100)),
                ('role', models.CharField(default='', max_length=100)),
                ('location', models.CharField(default='', max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('fcm_token', models.TextField()),
                ('admin', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Reimbursement',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('typea', models.CharField(max_length=100)),
                ('date', models.DateField(default=datetime.datetime.now)),
                ('detail', models.CharField(max_length=5000)),
                ('amount', models.IntegerField()),
                ('image', models.ImageField(upload_to='images/')),
                ('reimbursement_status', models.IntegerField(default=0)),
                ('student_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='learning.students')),
            ],
        ),
        migrations.CreateModel(
            name='NotificationStudent',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('message', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('student_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='learning.students')),
            ],
        ),
        migrations.CreateModel(
            name='Emplo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('employee_id', models.IntegerField(unique=True)),
                ('email', models.EmailField(max_length=254)),
                ('name', models.CharField(max_length=100)),
                ('monthly_ctc', models.DecimalField(decimal_places=2, max_digits=10)),
                ('addition', models.DecimalField(decimal_places=2, max_digits=10)),
                ('deduction', models.DecimalField(decimal_places=2, max_digits=10)),
                ('reimbursement', models.DecimalField(decimal_places=2, max_digits=10)),
                ('remarks', models.TextField(blank=True)),
                ('gross_pay', models.DecimalField(blank=True, decimal_places=2, max_digits=10)),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='learning.depart')),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='learning.loca')),
            ],
        ),
        migrations.CreateModel(
            name='data',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('emp_id', models.CharField(max_length=100)),
                ('documenttype', models.CharField(max_length=100)),
                ('imagefile', models.ImageField(upload_to='images/')),
                ('description', ckeditor.fields.RichTextField()),
                ('date', models.DateTimeField(default=datetime.datetime.now)),
                ('student_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='learning.students')),
            ],
            options={
                'db_table': 'data',
            },
        ),
        migrations.CreateModel(
            name='AdminHOD',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('admin', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
